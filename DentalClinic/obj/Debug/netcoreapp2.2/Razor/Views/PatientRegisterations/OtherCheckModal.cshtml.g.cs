#pragma checksum "C:\Users\mirwais\source\repos\DentalClinic\DentalClinic\Views\PatientRegisterations\OtherCheckModal.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "fe6a04875962bfa14ba8be031dad1b29632b4a79ca83ca8a3dc6ead301ae1f4e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_PatientRegisterations_OtherCheckModal), @"mvc.1.0.view", @"/Views/PatientRegisterations/OtherCheckModal.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/PatientRegisterations/OtherCheckModal.cshtml", typeof(AspNetCore.Views_PatientRegisterations_OtherCheckModal))]
namespace AspNetCore
{
    #line default
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 3 "C:\Users\mirwais\source\repos\DentalClinic\DentalClinic\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

    #line default
    #line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"fe6a04875962bfa14ba8be031dad1b29632b4a79ca83ca8a3dc6ead301ae1f4e", @"/Views/PatientRegisterations/OtherCheckModal.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"cf73278b4ebea8e3c7d3b3c1f45310faa42cc962b148af92efdbff2b46ccfbef", @"/Views/_ViewImports.cshtml")]
    public class Views_PatientRegisterations_OtherCheckModal : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 359, true);
            WriteLiteral(@"

    <div class=""card"">
        <div class=""card-header"">
            Add Service
            <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
        </div>
        <div class=""card-body"">
            <div class=""row"">
                <div class=""form-group col col-12"">
                    <label> Service Type:</label>
");
            EndContext();
            BeginContext(463, 835, true);
            WriteLiteral(@"                    <select class=""form-control"" style=""width:100%;"" id=""feeType""></select>
                </div>
                <div class=""form-group col col-12"">
                    <label><span class=""glyphicon glyphicon-eye-open""></span> Service:</label>
                    <input type=""text"" class=""form-control"" id=""FeeElementID"" placeholder=""Search"" />
                </div>
            </div>
        </div>
        <div class=""card-footer alert-light"">
            <div class=""row"">
                <div class=""col col-2 p-1"">
                    <button class=""btn btn-primary btn-sm btn-block"" onclick=""AddTable5Row();""> Add</button>
                </div>
            </div>
        </div>
    </div>           
        
    <script>

    $(""#feeType"").select2({
        ajax: {
            url: '");
            EndContext();
            BeginContext(1299, 64, false);
            Write(
#line 34 "C:\Users\mirwais\source\repos\DentalClinic\DentalClinic\Views\PatientRegisterations\OtherCheckModal.cshtml"
                   Url.Action("AutoCompleteFeeTypeSelect", "PatientRegisterations")

#line default
#line hidden
            );
            EndContext();
            BeginContext(1363, 717, true);
            WriteLiteral(@"',
            type: 'post',
            dataType: 'json',
            delay: 250,
            data: function (params) {
                return {
                    q: params.term, // search term
                    //page: params.page
                };
            },
            processResults: function (data) {
                return {
                    results: $.map(data, function (item) {
                        return {
                            text: item.label,
                            id: item.id,
                        }
                    })
                };
            },
            cache: true
        },
        placeholder: 'Search',
    });

    </script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
